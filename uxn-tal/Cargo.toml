[package]
name = "uxn-tal"
version = "0.6.0"
edition = "2021"
authors = ["David Horner"]
description = "uxntal:// protocol | a Rust library for assembling TAL (Tal Assembly Language) files into UXN ROM files"
license = "MIT"
repository = "https://github.com/davehorner/cardinal/tree/main/uxn-tal"
keywords = ["uxn", "tal", "assembler", "virtual-machine", "rom"]
categories = ["development-tools", "parsing", "compilers"]


[dependencies]
thiserror = "2.0"
regex = "1.12"
walkdir = "2.5.0"
once_cell = "1.21.3"

varvara = { package = "cardinal-varvara", version = "0.9.0" }
anyhow.workspace = true
clap = { workspace = true, features = ["derive"] }
env_logger.workspace = true
log.workspace = true
is-wsl = "0.4.0"
glob = "0.3.3"
tempfile = "3.23.0"
dirs = "6.0.0"
wslpath = "0.0.2"
reqwest = { version = "0.12.24", features = ["blocking", "http2", "native-tls-alpn"] }
percent-encoding = "2.3.2"
base64 = "0.22.1"
url = "2.5.7"
scraper = "0.24.0"

uxn-tal-common = { path = "../uxn-tal-common" }
uxn-tal-defined = "0.1.0"
#uxn-tal-defined = { path = "../uxn-tal-defined" }

[target.'cfg(not(all(target_family = "wasm", target_os = "unknown")))'.dependencies]
which = "8.0.0"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["consoleapi"] }

[target.'cfg(target_arch = "aarch64")'.dependencies]
uxn = { package = "cardinal-uxn", version = "0.5.6", features = [
   "native",
] }

[target.'cfg(not(target_arch = "aarch64"))'.dependencies]
uxn = { package = "cardinal-uxn", version = "0.5.6" }


[[bin]]
name = "uxntal"
path = "src/bin/uxntal.rs"
